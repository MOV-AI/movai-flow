#!/bin/bash
#
# Description:    Collect setup and runtime information about the host MOVAI Flow is (to be) installed on
#

# Exit on error
set -e

# Vars
SERVICE_NAME=movai-flow
SERVICE_PORTS="8080 8083"

# Vars to store infos
HaveNvidia=0        # True if Nvidia GPU found
HaveDockerNvidia=0  # True if Docker Nvidia runtime found
HaveResources=0     # True if enough RAM,CPU,DISK found
HaveFreePorts=0     # True if needed ports are not used

# File to store infos
InstConfig=/tmp/movai-flow-installer.log
rm -f "$InstConfig"
touch "$InstConfig"

# Check Nvidia
Architecture="$(uname -m)"
if [ "$Architecture" = "x86_64" ]; then
  # Is there a Nvidia card present (possible HW enhanced graphical rendering)
  [ "$(echo /sys/module/nvidia/drivers/pci:nvidia/*:*:*.*)" != "/sys/module/nvidia/drivers/pci:nvidia/*:*:*.*" ] && HaveNvidia=1
  # Is there NVIDIA Container Toolkit to build and run GPU accelerated Docker containers
  [ "$(dpkg -l | grep ^ii | grep -iw nvidia-docker2)" != "" ] && HaveDockerNvidia=1
fi
if [ $HaveNvidia -gt 0 ]; then
    echo "  Nvidia GPU card found"
else
    echo "  Nvidia GPU card not found"
fi

if [ $HaveDockerNvidia -gt 0 ]; then
    echo "  NVIDIA Container Toolkit found"
else
    echo "  NVIDIA Container Toolkit not found"
    if [ $HaveNvidia -gt 0 ]; then
      echo -e "\033[1;33mWARNING: NVIDIA GPU found but no NVIDIA Container Toolkit\e[0m"
      echo "Follow instructions on getting started with the NVIDIA Container Toolkit"
      echo -e "\thttps://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#docker"
    fi
fi

# Check resources
one_meg=1048576
mem_available=$(($(getconf _PHYS_PAGES) * $(getconf PAGE_SIZE) / one_meg))

cpus_available=$(grep -cE 'cpu[0-9]+' /proc/stat)
disk_available=$(df / | tail -1 | awk '{print $4}')
warning_resources="false"
if (( mem_available < 4000 )) ; then
  echo
  echo -e "\033[1;33mWARNING!!!: Not enough memory available for MOV.AI Flow Docker Images.\e[0m"
  echo "At least 4GB of memory required. You have $(numfmt --to iec $((mem_available * one_meg)))"
  echo
  warning_resources="true"
else
  echo "  $(numfmt --to iec $((mem_available * one_meg))) mem found"
fi
if (( cpus_available < 2 )); then
  echo
  echo -e "\033[1;33mWARNING!!!: Not enough CPUS available for MOV.AI Flow Docker Images.\e[0m"
  echo "At least 2 CPUs recommended. You have ${cpus_available}"
  echo
  warning_resources="true"
else
  echo "  ${cpus_available} CPUs found"
fi
if (( disk_available < one_meg * 10 )); then
  echo
  echo -e "\033[1;33mWARNING!!!: Not enough Disk space available for MOV.AI Flow Docker Images.\e[0m"
  echo "At least 10 GBs recommended. You have $(numfmt --to iec $((disk_available * 1024 )))"
  echo
  warning_resources="true"
else
  echo "  $(numfmt --to iec $((disk_available * 1024 ))) free space found"
fi

if [[ ${warning_resources} == "true" ]]; then
  echo
  echo -e "\033[1;33mWARNING!!!: You have not enough resources to run MOVAI Flow (see above)!\e[0m"
  echo "Please increase amount of resources available"
  echo
  echo "ERROR: Invalid installation config.  Refusing to install."
  exit 1
else
  HaveResources=1
fi

# Check ports
echo "Checking ports for $SERVICE_NAME"
HaveUnFreePort=0
for port in $SERVICE_PORTS; do
  # echo returns 1 on free port
  if echo > "/dev/tcp/localhost/$port" > /dev/null 2>&1; then
    HaveUnFreePort=1
  fi
done
if [ $HaveUnFreePort -gt 0 ]; then
  echo "  All needed ports are not free"
else
  echo "  All needed ports are free"
  HaveFreePorts=1
fi

{
    echo "HaveNvidia=$HaveNvidia"
    echo "HaveDockerNvidia=$HaveDockerNvidia"
    echo "HaveResources=$HaveResources"
    echo "HaveFreePorts=$HaveFreePorts"
} > "$InstConfig"
