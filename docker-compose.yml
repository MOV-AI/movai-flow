# Basic MOVAI Flow cluster configuration with Redis and Redis local databases.
#
# WARNING:
#   This configuration is for local development. Do not use it in a production deployment.
#
# This configuration supports basic configuration using environment variables or an .env file
# The following variables are supported:
#
# MOVAI_REGISTRY               - Docker images registry
#                                Default: registry.cloud.mov.ai
# MOVAI_UID                    - User ID in MOVAI containers
#                                Default: 1000
# MOVAI_DEVICE_NAME            - Docker containers identifier
#                                Default: Flow
# MOVAI_ENV                    - Docker containers environment (develop/qa/release)
#                                Default: qa
#
# Those configurations are useful mostly in case of standalone testing/running MOVAI Flow in test/try-out mode
#
# STUDIO_USER_USERNAME   - Username for the administrator account (if requested).
#                          Default: movai
# STUDIO_USER_PASSWORD   - Password for the administrator account (if requested).
#                          Default: movai
#
# STUDIO_SIMU_GUI        - Default Simulation GUI: WorldLauncher
#
# STUDIO_SIMU_PLUGIN_PACKAGES - List of movai ignition plugin packages to be installed.
#
# STUDIO_DB_PACKAGES     - List of packages initializing the DB.
#                          Default: movai-baseline
#
# STUDIO_APP_PACKAGES    - List of packages initializing the web apps.
#                          Default: movai-launched movai-ide
#
# STUDIO_SPAWNER_PACKAGES - List of packages initializing the spawner.
#                          Default: libgflags-dev ros-noetic-mav-msgs ros-noetic-movai-ign ignition-fortress
#
# SPAWNER_PIP_ADDITIONAL_REQUIREMENTS - Additional PIP requirements to add when starting ROS spawner.
#                                Default: ''
#

# Feel free to modify this file to suit your needs.
---
version: "3.9"
x-movai-common:
  &movai-common
  environment:
    &movai-common-env
    MOVAI_ENV: ${MOVAI_ENV:-qa}
    LOGLEVEL: WARNING
    MOVAI_USERSPACE: /opt/mov.ai/user
    MOVAI_MANAGER_URI: ${MANAGER_URI:-http://localhost}
    DEVICE_NAME: ${MOVAI_DEVICE_NAME:-flow}
    FLEET_NAME: ${FLEET_NAME:?missing FLEET_NAME ENV var}
    FLEET_TOKEN: ${FLEET_TOKEN:?missing FLEET_TOKEN ENV var}
    REDIS_LOCAL_PORT: 6379
    REDIS_LOCAL_HOST: redis-local
    REDIS_MASTER_PORT: 6379
    REDIS_MASTER_HOST: redis-master
    ROS_MASTER_URI: http://ros-master:11311/
    PUBLIC_IP: ${PUBLIC_IP:-127.0.0.1}
    LOG_HTTP_HOST: http://health-node:8081
    IGNITION_MOVAI: "true"
    IGN_PARTITION: ${IGN_PARTITION:?missing IGN_PARTITION ENV var}
    IGNITION_VERSION: fortress
    APT_AUTOINSTALL: "once"
    APT_KEYS_URL_LIST: "https://artifacts.cloud.mov.ai/repository/movai-applications/gpg"
    APT_REPOS_LIST: "deb [arch=all] https://artifacts.cloud.mov.ai/repository/ppa-testing testing main"
  volumes:
    - ./userspace:/opt/mov.ai/user
    - ./shared:/opt/mov.ai/shared
    - ./logs:/opt/mov.ai/logs
  # user: "${MOVAI_UID:-1000}:0"
  depends_on:
    &movai-common-depend
    redis-local:
      condition: service_healthy
    redis-master:
      condition: service_healthy
    influxdb:
      condition: service_healthy

services:
  redis-master:
    image: ${MOVAI_REGISTRY:-registry.cloud.mov.ai}/develop/redis:test-2.0.7
    container_name: redis-master-$MOVAI_DEVICE_NAME
    networks:
      - private
    ports:
      - "6379:6379"
    depends_on:
      health-node:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "echo", ">", "/dev/tcp/localhost/6379"]
      start_period: 3s
      interval: 3s
      timeout: 60s
      retries: 1
    volumes:
      - redis-master-flow-volume:/data
    environment:
      <<: *movai-common-env
      APT_INSTALL_LIST: $STUDIO_DB_PACKAGES

  redis-local:
    image: ${MOVAI_REGISTRY:-registry.cloud.mov.ai}/develop/redis:test-2.0.7
    container_name: redis-local-$MOVAI_DEVICE_NAME
    networks:
      - private
    depends_on:
      health-node:
        condition: service_healthy
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "echo", ">", "/dev/tcp/localhost/6380"]
      start_period: 3s
      interval: 3s
      timeout: 2s
      retries: 3
    volumes:
      - redis-local-flow-volume:/data

  backend:
    <<: *movai-common
    image: ${MOVAI_REGISTRY:-registry.cloud.mov.ai}/develop/backend:2.2.2022081
    container_name: backend-$MOVAI_DEVICE_NAME
    networks:
      - private
    depends_on:
      <<: *movai-common-depend
    entrypoint: /bin/bash
    environment:
      <<: *movai-common-env
      APT_INSTALL_LIST: "movai-backend,$STUDIO_APP_PACKAGES"
    command:
      - -ic
      - |
        set -m
        rm -f /opt/mov.ai/app/movai.{log,err}
        touch /opt/mov.ai/app/movai.{log,err}
        exec docker-entrypoint.sh &
        printf "Waiting backend to launch on localhost:5004:...\n"
        while ! timeout 1 bash -c "echo > /dev/tcp/localhost/5004"; do
          sleep 5
        done
        fg
        python3 -m tools.new_user -u ${STUDIO_USER_USERNAME:-movai} -p ${STUDIO_USER_USERNAME:-movai} -s
    healthcheck:
      test: ["CMD", "echo", ">", "/dev/tcp/localhost/5004"]
      start_period: 5s
      interval: 5s
      timeout: 2s
      retries: 3

  influxdb:
    image: ${MOVAI_REGISTRY:-registry.cloud.mov.ai}/devops/influxdb:v1.0.0
    container_name: influxdb-$MOVAI_DEVICE_NAME
    networks:
      - private
    healthcheck:
      test: ["CMD", "echo", ">", "/dev/tcp/localhost/8086"]
      start_period: 3s
      interval: 3s
      timeout: 2s
      retries: 3
    volumes:
      - influxdb-flow-volume:/var/lib/influxdb

  health-node:
    image: ${MOVAI_REGISTRY:-registry.cloud.mov.ai}/develop/health-node:2.2.2022081
    container_name: health-node-$MOVAI_DEVICE_NAME
    networks:
      - private
    depends_on:
      influxdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "echo", ">", "/dev/tcp/localhost/8081"]
      start_period: 3s
      interval: 3s
      timeout: 2s
      retries: 3
    environment:
      <<: *movai-common-env
      SPAWNER_GROUPS: $SPAWNER_GROUPS
      HOST_PROC: /hostfs/proc
      APT_INSTALL_LIST: "movai-health-node"

  ros-master:
    image: ${MOVAI_REGISTRY:-registry.cloud.mov.ai}/devops/ros-master-noetic:v0.0.2
    privileged: true
    networks:
      - private
    depends_on:
      backend:
        condition: service_healthy
    container_name: ros-master-$MOVAI_DEVICE_NAME
    ports:
      - "${STUDIO_ROS_MASTER_PORT:-11311}:11311"
    healthcheck:
      test: ["CMD", "echo", ">", "/dev/tcp/localhost/11311"]
      start_period: 3s
      interval: 3s
      timeout: 2s
      retries: 3

  spawner:
    <<: *movai-common
    image: ${MOVAI_REGISTRY:-registry.cloud.mov.ai}/devops/spawner-ign-noetic:v2.2.8
    privileged: true
    networks:
      - private
    depends_on:
      <<: *movai-common-depend
      backend:
        condition: service_healthy
    healthcheck:
      test: pgrep -f "/usr/bin/python3 /opt/mov.ai/app/async_movaicore.py -v"
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 1
    container_name: spawner-$MOVAI_DEVICE_NAME
    volumes:
      - /dev:/dev
      - /sys/devices:/sys/devices
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket
      - /run/movai:/var/run/movai
      - ./userspace:/opt/mov.ai/user
      - ./shared:/opt/mov.ai/shared
      - ./logs:/opt/mov.ai/logs
    environment:
      <<: *movai-common-env
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      APP_NAME: spawner
      APT_INSTALL_LIST: $STUDIO_SPAWNER_PACKAGES

  simulator:
    image: ignition-gazebo:test
    container_name: simulator-$MOVAI_DEVICE_NAME
    profiles: ["simulator"]
    environment:
      <<: *movai-common-env
      DISPLAY: "$DISPLAY"
      QT_X11_NO_MITSHM: "1"
      XAUTHORITY: "$XAUTH"
      IGN_GAZEBO_SYSTEM_PLUGIN_PATH: /movai_ign_plugins/system:/models_database/plugins/system
      IGN_GUI_PLUGIN_PATH: /movai_ign_plugins/gui:/models_database/plugins/gui
      IGN_GAZEBO_RESOURCE_PATH: /models_database/my_models
      APT_INSTALL_LIST: $STUDIO_SIMU_PLUGIN_PACKAGES
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - $XAUTH:$XAUTH
      - ./models_database:/models_database
      - ./models_database/fuel:/root/.ignition/fuel
    network_mode: host
    privileged: true
    tty: true
    healthcheck:
      test: pgrep -f "ign gui -s $STUDIO_SIMU_GUI"
      start_period: 3s
      interval: 10s
      timeout: 60s
      retries: 10
    command: ign gui -s $STUDIO_SIMU_GUI

  ros-tools:
    image: ${MOVAI_REGISTRY:-registry.cloud.mov.ai}/devops/ros-tools-ce:v1.0.0
    container_name: ros-tools-$MOVAI_DEVICE_NAME
    profiles: ["tools"]
    environment:
      <<: *movai-common-env
      DISPLAY: "$DISPLAY"
      QT_X11_NO_MITSHM: "1"
      XAUTHORITY: "$XAUTH"
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - $XAUTH:$XAUTH
      - ./rviz/:/headless/.rviz/:rw
    networks:
      - private
    privileged: true
    tty: true
    entrypoint: /bin/bash
    command:
      - -ic
      - |
        exec /usr/bin/rviz

  haproxy:
    image: ${MOVAI_REGISTRY:-registry.cloud.mov.ai}/qa/haproxy:2.2.2022048
    container_name: haproxy-$MOVAI_DEVICE_NAME
    networks:
      - private
      - proxy
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:rw
      - ./haproxy/503-movai.http:/etc/503-movai.http
    ports:
      - "${STUDIO_HTTP_PORT:-8080}:80"
      - "${STUDIO_HTTPS_PORT:-8443}:443"
    environment:
      - SPAWNER_PORTS="bind :11411\\n\\tbind :9090"

  logs:
    container_name: logs-$MOVAI_DEVICE_NAME
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080
    networks:
      - proxy
    environment:
      DOZZLE_NO_ANALYTICS: "true"
      DOZZLE_FILTER: "name=$MOVAI_DEVICE_NAME"

volumes:
  redis-master-flow-volume:
  redis-local-flow-volume:
  influxdb-flow-volume:

networks:
  proxy:
    name: flow-proxy
  private:
    name: flow-private
