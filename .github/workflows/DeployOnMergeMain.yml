name: "Pre Release"
on:
  push:
    branches:
      - main
      - 'releases/**'

    paths-ignore:
      - 'debian/changelog'

jobs:
  Deploy-App-Internal-Release:
    runs-on: ubuntu-20.04
    container:
      image: registry.cloud.mov.ai/qa/ros-buildtools-noetic:v2.0.7
      options: --user root
      credentials:
        username: ${{secrets.PORTUS_APP_USER}}
        password: ${{secrets.PORTUS_APP_TOKEN}}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Find Package details
      id: vars
      run: |
        PACKAGE_VERSION=$(dpkg-parsechangelog --show-field Version)
        PACKAGE_NAME=$(dpkg-parsechangelog --show-field Source)

        echo ::set-output name=pkg_name::$PACKAGE_NAME
        echo ::set-output name=pkg_version::$PACKAGE_VERSION

    - name: Raise Version
      id: vars-after-raise
      run: |
        PACKAGE_VERSION=${{ steps.vars.outputs.pkg_version }}
        main_version=${PACKAGE_VERSION%-*}
        build_id="${PACKAGE_VERSION#*-}"
        raised_buildid=$(($build_id+1))
        RAISED_PACKAGE_VERSION="$main_version-$raised_buildid"
        echo ::set-output name=pkg_version::$RAISED_PACKAGE_VERSION

    - name: Pack debian
      run: |
        git config --global --add safe.directory $(pwd)
        git config --global user.name ${{ secrets.RAISE_BOT_COMMIT_USER }}
        git config --global user.email ${{ secrets.RAISE_BOT_COMMIT_MAIL }}

        apt-get update
        apt-get install -y devscripts equivs git-buildpackage

        # Set the install command to be used by mk-build-deps (use --yes for non-interactive)
        install_tool="apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends --yes"

        # Install build dependencies automatically
        mk-build-deps --install --tool="${install_tool}" debian/control

        # Add version into changelog and commit it
        gbp dch --ignore-branch -N ${{ steps.vars-after-raise.outputs.pkg_version }} -c

        # Build .deb with binaries only
        dpkg-buildpackage -b --unsigned-source --unsigned-changes

        # Store generated .deb
        mkdir artifacts && \
        cp ../*.deb artifacts

    - name: Raise App version
      uses: CasperWA/push-protected@v2
      with:
        token: ${{ secrets.RAISE_BOT_COMMIT_PASSWORD }}
        branch: ${{ github.ref_name }}
        unprotect_reviews: true

    - name: Publish to Nexus ppa-testing
      run: |
          NEXUS_ENDPOINT="artifacts.cloud.mov.ai"
          NEXUS_REPO="ppa-testing"
          FILE_LOCATION=$(find artifacts/*.deb)
          curl -u "${{ secrets.NEXUS_PUBLISHER_USR }}:${{ secrets.NEXUS_PUBLISHER_PWD }}" \
          -H "Content-Type: multipart/form-data" \
          --data-binary "@$FILE_LOCATION" \
          "https://$NEXUS_ENDPOINT/repository/$NEXUS_REPO/"

    - name: Create Github Release
      uses: softprops/action-gh-release@v1
      with:
        prerelease: true
        name: "Release of ${{ steps.vars-after-raise.outputs.pkg_version  }}"
        generate_release_notes: true
        files: artifacts/*.deb
        tag_name: ${{ steps.vars-after-raise.outputs.pkg_version  }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

