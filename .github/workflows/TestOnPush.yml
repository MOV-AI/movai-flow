name: CI - TestOnPush

on:
  # Trigger the workflow on push or pull request
  # but only for the main and dev branches
  # or on tag of type v*.*.*
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - dev
      - main
jobs:
  tests:
    timeout-minutes: 30
    name: "Sanity checks"
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: install static-checks-requirements
      run: |
        python3 -m pip install docker-compose yamllint

    - name: Yamllint
      uses: karancode/yamllint-github-action@master
      with:
        yamllint_file_or_dir: docker-compose.yml
        yamllint_strict: false
        yamllint_comment: true
        yamllint_config_filepath: .yamllint-config.yml
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Validate json
      uses: anyone-developer/anyone-validate-json@main
      with:
        file-extension: '.json'
        ignore-files: ''
        ignore-directories: '.git'
        read-path: 'robots'

    - name: run docker-compose lint
      run: |
        docker-compose -f docker-compose.yml config

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: registry.cloud.mov.ai
        username: ${{secrets.PORTUS_APP_USER}}
        password: ${{secrets.PORTUS_APP_TOKEN}}

    - name: prepare docker-compose cluster
      run: |
        mkdir -p ./{logs,shared,userspace,models_database} || true
        sudo chown 1000:1000 ./{logs,shared,userspace,models_database} -R
        #timeout 90 docker-compose -f docker-compose.yml up

    - name: run docker-compose cluster
      uses: isbang/compose-action@v1.0.0
      with:
        compose-file: './docker-compose.yml'
        down-flags: '--volumes'

    - name: test cluster frontend
      run: |
        export url=http://localhost:5004/token-auth/
        # retry for 1 minute
        count=10
        for i in $(seq $count); do
          status_code=$(curl -s -o /dev/null --cookie-jar cookies --header 'Content-Type: application/json' -X POST --data '{"username":"movai","password":"movai","remember":true}' -w "%{http_code}" $url)
          if [ $status_code == 200 ]; then
            break
          fi
          echo "Waiting for MOVAI Studio availability (ret:$status_code)"
          sleep 10
        done
        [ $status_code == 200 ] && exit 0





