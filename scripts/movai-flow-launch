#!/bin/bash
SCRIPTNAME=Launcher
SERVICE_NAME=movai-flow
APP_PATH=${APP_PATH:-/usr/share/$SERVICE_NAME}
CONFIG_PATH=${CONFIG_PATH:-/$APP_PATH/config}

DOCKER_COMPOSE_CONF=$APP_PATH/docker-compose.yml
DOCKER_COMPOSE_CONF_MHOST=$APP_PATH/docker-compose-host.yml

DOCKER_COMPOSE_BIN=$(which docker-compose || echo /usr/local/bin/docker-compose)
DOCKER_COMPOSE_UP_OPTIONS=${DOCKER_COMPOSE_UP_OPTIONS:---no-recreate}

APP_URL="http://localhost:8080/api/v1/apps/mov-fe-app-ide-ce/"

Output() {
  # Prepare base message
  Message="MOV.AI Flow™ $SCRIPTNAME: $1"

  # Output the message even if a blank message (make output nice)
  echo "$Message"

  # Return if blank.
  if [ "$1" = "" ]; then
    return
  fi

  # Output to log
  if which journalctl > /dev/null 2>&1
  then
    echo MESSAGE="$Message" | head -n 1 | logger --journald
  else
    echo "$Message" | logger
  fi
}

FilterRunningService() {
  $DOCKER_COMPOSE_BIN -f "$compose_conf" ps --services --filter "status=running" | grep "$1"
}

Output "This terminal window will verify all MOV.AI Flow™ services are running
and then launch the web application

(U) [^_^] (U)

"

if [ -f "$CONFIG_PATH/config.env" ]; then
  . "$CONFIG_PATH/config.env"
else
  Output "No configuration found"
fi

if [ "$NETWORK_MODE" = "" ]; then
  Output "

  MOV.AI Flow™ can either run in an isolated docker network or use the host's networking interfaces
   - isolated network is recommended when working with a single host
   - host network is recommended when working with multiple hosts (RPi, sensors, ...) which will need to access MOV.AI Flow™ containers

  If you don't know what this is all about just press ENTER

  See doc: https://docs.docker.com/network/host/.
  "
  while true; do
    read -p "Do you want to run MOV.AI Flow™ in isolated network [Y/n]?" yn
      case ${yn:-Y} in
        [Yy]* ) NETWORK_MODE="bridge"; break;;
        [Nn]* ) NETWORK_MODE="host"; break;;
      esac
  done

  # Update config file
  if [ -f "$CONFIG_PATH/config.env" ]; then
    sed -i -e "/^NETWORK_MODE=/s/=.*/=$NETWORK_MODE/" "$CONFIG_PATH/config.env"
  else
    mkdir -p "$CONFIG_PATH"
    echo "NETWORK_MODE=$NETWORK_MODE" > "$CONFIG_PATH/config.env"
  fi
fi

if [ "$NETWORK_MODE" = "host" ]; then
  compose_conf="$DOCKER_COMPOSE_CONF_MHOST"
else
  compose_conf="$DOCKER_COMPOSE_CONF"
fi

pushd "$APP_PATH" || exit

Output "Downloading images"
$DOCKER_COMPOSE_BIN -f "$compose_conf" pull

Output "Starting services (with $NETWORK_MODE network mode)"
$DOCKER_COMPOSE_BIN -f "$compose_conf" up -d "$DOCKER_COMPOSE_UP_OPTIONS"

while [[ -z $(FilterRunningService spawner) ]]; do
  Output "waiting for spawner"
  sleep 5
done

while [[ -z $( $DOCKER_COMPOSE_BIN -f "$compose_conf" exec -u movai spawner bash -c 'pgrep -f "/usr/bin/python3 -m flow_initiator"') ]]
do
  sleep 10
  Output "loading ..."
done

# Symlink userspace and models_database to ~/Documents/MovaiFlow
user_documents_path=$(xdg-user-dir DOCUMENTS)
Output "Creating user and models folder"
if [ ! -e "${user_documents_path}/MovaiFlow" ]; then
  mkdir -p "${user_documents_path}/MovaiFlow"
  ln -sf "$APP_PATH/userspace" "${user_documents_path}/MovaiFlow"
  ln -sf "$APP_PATH/models_database" "${user_documents_path}/MovaiFlow"
  Output "User and models folder ${user_documents_path}/MovaiFlow"
fi

Output "Starting web application"
x-www-browser --app="$APP_URL" "$APP_URL" > /dev/null 2>&1
